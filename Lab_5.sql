use SHU_UNIVER
select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
		from AUDITORIUM inner join AUDITORIUM_TYPE
		on AUDITORIUM_TYPE.AUDITORIUM_TYPE = AUDITORIUM.AUDITORIUM_TYPE

select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
		from AUDITORIUM inner join AUDITORIUM_TYPE
		on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE 
		and AUDITORIUM_TYPE.AUDITORIUM_TYPENAME like '%компьютер%';

select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
		from AUDITORIUM, AUDITORIUM_TYPE
		where AUDITORIUM_TYPE.AUDITORIUM_TYPE = AUDITORIUM.AUDITORIUM_TYPE

select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
		from AUDITORIUM, AUDITORIUM_TYPE
		where AUDITORIUM_TYPE.AUDITORIUM_TYPE = AUDITORIUM.AUDITORIUM_TYPE
		and AUDITORIUM_TYPE.AUDITORIUM_TYPENAME like '%компьютер%';
		 
select FACULTY.FACULTY_NAME, PULPIT.PULPIT_NAME, 
			GROUPS.PROFESSION, SUBJECT.SUBJECT_NAME, 
			STUDENT.NAME, 
			case
				when (PROGRESS.NOTE = 6) then 'шесть'
				when (PROGRESS.NOTE = 7) then 'семь'
				when (PROGRESS.NOTE = 8) then 'восемь'
			end[note]
		from 
		FACULTY join GROUPS on GROUPS.FACULTY = FACULTY.FACULTY
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PULPIT on PULPIT.FACULTY = FACULTY.FACULTY
		join SUBJECT on SUBJECT.PULPIT = PULPIT.PULPIT
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		where PROGRESS.NOTE between 6 and 8
		order by	PROGRESS.NOTE desc,
					FACULTY.FACULTY, 
					PULPIT.PULPIT, 
					GROUPS.PROFESSION, 
					STUDENT.NAME

select FACULTY.FACULTY_NAME, PULPIT.PULPIT_NAME, 
			GROUPS.PROFESSION, SUBJECT.SUBJECT_NAME, 
			STUDENT.NAME, 
		case
			when (PROGRESS.NOTE = 6) then 'шесть'
			when (PROGRESS.NOTE = 7) then 'семь'
			when (PROGRESS.NOTE = 8) then 'восемь'
		end[note]
		from 
		FACULTY join GROUPS on GROUPS.FACULTY = FACULTY.FACULTY
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PULPIT on PULPIT.FACULTY = FACULTY.FACULTY
		join SUBJECT on SUBJECT.PULPIT = PULPIT.PULPIT
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		where PROGRESS.NOTE between 6 and 8
		order by
		(
			case
				when (PROGRESS.NOTE = 7) then 1
				when (PROGRESS.NOTE = 8) then 2
				when (PROGRESS.NOTE = 6) then 3
			end
		)


select PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель]
	from PULPIT left outer join TEACHER
		on PULPIT.PULPIT = TEACHER.PULPIT


select PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель]
	from TEACHER left outer join PULPIT
		on PULPIT.PULPIT = TEACHER.PULPIT


select PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель]
	from TEACHER right outer join PULPIT
		on PULPIT.PULPIT = TEACHER.PULPIT


-- 8 пункт

-- только левая
select PULPIT.PULPIT_NAME[Кафедра], TEACHER.TEACHER_NAME[Преподаватель]
	from PULPIT full outer join TEACHER
		on PULPIT.PULPIT = TEACHER.PULPIT
		where TEACHER.PULPIT is null;

-- только правая
select PULPIT.PULPIT_NAME[Кафедра], TEACHER.TEACHER_NAME[Преподаватель]
	from PULPIT full outer join TEACHER
		on PULPIT.PULPIT = TEACHER.PULPIT
		where PULPIT.PULPIT is null;
-- обе
select PULPIT.PULPIT_NAME[Кафедра], TEACHER.TEACHER_NAME[Преподаватель]
	from PULPIT full outer join TEACHER
		on PULPIT.PULPIT = TEACHER.PULPIT
		where TEACHER.PULPIT is not null;


use SHU_UNIVER
select AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
	from AUDITORIUM cross join AUDITORIUM_TYPE
		where AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;


-- MY_BASE
use SHU_MYBASE2

select ENROLLMENT.DEPARTMENT, EMPLOYEES.NAME 
		from ENROLLMENT inner join EMPLOYEES
		on ENROLLMENT.ID = EMPLOYEES.ID;


select EMPLOYEES.NAME, ENROLLMENT.POSITION_NAME, case
	when (POSITION.PRIVILEGES = '') then 'vse norm'
	end[PRIVILEGES]
	from EMPLOYEES join ENROLLMENT on EMPLOYEES.ID = ENROLLMENT.ID
	join POSITION on ENROLLMENT.POSITION_NAME = POSITION.POSITION_NAME;

select ENROLLMENT.DEPARTMENT, isnull(EMPLOYEES.NAME, '***')[NAME]
		from ENROLLMENT left outer join EMPLOYEES
		on ENROLLMENT.ID = EMPLOYEES.ID;

select isnull(ENROLLMENT.DEPARTMENT, '***')[NAME], EMPLOYEES.NAME
		from ENROLLMENT right outer join EMPLOYEES
		on ENROLLMENT.ID = EMPLOYEES.ID;

select isnull(ENROLLMENT.DEPARTMENT, 'netu department')[DEPARTMENT], EMPLOYEES.NAME[NAME]
	from ENROLLMENT full outer join EMPLOYEES
		on ENROLLMENT.ID = EMPLOYEES.ID
		where EMPLOYEES.ID is not null;

create table TIMETABLE
(
	GROUP_NAME int foreign key references GROUPS(IDGROUP),
	AUDITORIUM char(20) foreign key references AUDITORIUM(AUDITORIUM),
	SUBJ char(10) foreign key references SUBJECT(SUBJECT),
	TEACHER char(10) foreign key references TEACHER(TEACHER) ,
	DAY_OF_WEEK smallint ,
	LESSON_TIME smallint
)


insert into TIMETABLE
	values	(5, '206-1', 'ОАиП', 'СМЛВ', 5, 14),
			(1, '301-1', 'БД', 'БРГ',2, 12),
			(2, '408-2', 'КГ', 'ДМДК',4, 9),
			(19, '313-1', 'СУБД', 'МРЗ', 5,15),
			(7, '206-1', 'ОАиП', 'ЖЛК', 3,17);

select AUDITORIUM.AUDITORIUM_NAME, TIMETABLE.LESSON_TIME,
	Case
	when(TIMETABLE.DAY_OF_WEEK = 1) then 'понедельник'
	when(TIMETABLE.DAY_OF_WEEK = 2) then 'вторник'
	when(TIMETABLE.DAY_OF_WEEK = 3) then 'среда'
	when(TIMETABLE.DAY_OF_WEEK = 4) then 'четверг'
	when(TIMETABLE.DAY_OF_WEEK = 5) then 'пятница'
	when(TIMETABLE.DAY_OF_WEEK = 6) then 'суббота'
	else 'нет такого дня'
	end [День недели]
from TIMETABLE inner join AUDITORIUM
	on TIMETABLE.AUDITORIUM = AUDITORIUM.AUDITORIUM
	where TIMETABLE.DAY_OF_WEEK = 5 and TIMETABLE.LESSON_TIME between 10 and 19

select TEACHER.TEACHER_NAME, TEACHER.PULPIT
	from TIMETABLE inner join TEACHER
	on TIMETABLE.TEACHER = TEACHER.TEACHER
	where TIMETABLE.DAY_OF_WEEK = 5 and timetable.LESSON_TIME != 14

select GROUPS.PROFESSION, GROUPS.IDGROUP
	from TIMETABLE inner join GROUPS
	on TIMETABLE.GROUP_NAME = GROUPS.IDGROUP
	where TIMETABLE.DAY_OF_WEEK = 5 and timetable.LESSON_TIME != 14